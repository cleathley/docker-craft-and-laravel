events {
    worker_connections 1024;
}
http {
    # These are references to our backend containers, facilitated by compose, as defined in docker-compose.yml
    upstream localhost {
        server web1;
        server web2;
    }

    # Redirect all traffic to https
    server {
        server_name localhost;
        listen 80;
        return 301 https://localhost$request_uri;
    }

    # Terminate the SSL connection and proxy pass to the upstream
    server {
        server_name localhost;
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/localhost.pem;
        ssl_certificate_key /etc/nginx/localhost.key;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_dhparam /etc/nginx/dhparams.pem;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        add_header Strict-Transport-Security "max-age=31536000";

        location / {
            proxy_pass http://localhost;
            proxy_set_header Host $host;
        }
    }
}